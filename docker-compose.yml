version: "3.9"

# extension field: https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-networks: &networks
  networks:
    - ac-network

x-ac-shared-conf: &ac-shared-conf
  <<: *networks
  working_dir: /azerothcore
  depends_on:
    ac-database:
      condition: service_healthy

services:
  ac-database:
    <<: *networks
    image: mysql:8.0
    restart: unless-stopped
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    ports:
      - ${DOCKER_DB_EXTERNAL_PORT:-63306}:3306
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql
    healthcheck:
      test: '/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute "SHOW DATABASES;"'
      interval: 2s
      timeout: 40s
      retries: 20

  ac-worldserver:
    container_name: acore-docker-ac-worldserver-1 # fixed container name to simplify the attach process
    <<: *ac-shared-conf
    stdin_open: true
    tty: true
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    image: acore/ac-wotlk-worldserver:${DOCKER_IMAGE_TAG:-7.0.0-dev.1}
    restart: unless-stopped
    privileged: true
    user: ${DOCKER_USER:-acore}
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    expose:
      - 8085
    volumes:
      - ./scripts/lua:/azerothcore/env/dist/bin/lua_scripts/scripts
      - "${DOCKER_VOL_CLIENT_DATA:-ac-client-data}:/azerothcore/env/dist/data:ro"

    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
      AC_CLOSE_IDLE_CONNECTIONS: "0"
    depends_on:
      ac-eluna-ts-dev:
        condition: service_started
      ac-client-data:
        condition: service_completed_successfully
      ac-db-import:
        condition: service_completed_successfully

  ac-authserver:
    <<: *ac-shared-conf
    tty: true
    image: acore/ac-wotlk-authserver:${DOCKER_IMAGE_TAG:-7.0.0-dev.1}
    restart: unless-stopped
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
    expose:
      - 3724
    environment:
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_TEMP_DIR: "/azerothcore/env/dist/temp"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_SQLDRIVER_LOG_FILE: "SQLDriver.log"
      AC_SQLDRIVER_QUERY_LOGGING: "1"
    depends_on:
      ac-database:
        condition: service_healthy
      ac-db-import:
        condition: service_completed_successfully

  ac-eluna-ts-dev:
    image: acore/eluna-ts:master
    # the build:lib is done in the healthcheck
    command: sh -c "cd /eluna-ts/modules && touch index.ts && npm install && cd /eluna-ts && npm run dev"
    # small workaround to make the other services to wait for the eluna-ts build
    healthcheck:
      test: sh -c "cd /eluna-ts/modules/eluna-ts && npm run build:lib && npm run build"
      timeout: 60s
      retries: 10
      interval: 5s
      start_period: 10s
    restart: unless-stopped
    volumes:
      # from typescript
      - ./scripts/typescript:/eluna-ts/modules
      # to lua
      - ./scripts/lua:/eluna-ts/dist/

  ac-client-data:
    <<: *networks
    image: acore/ac-wotlk-client-data:${DOCKER_IMAGE_TAG:-7.0.0-dev.1}
    volumes:
      - "${DOCKER_VOL_CLIENT_DATA:-ac-client-data}:/azerothcore/env/dist/data"

  ac-db-import:
    <<: *ac-shared-conf
    image: acore/ac-wotlk-db-import:${DOCKER_IMAGE_TAG:-7.0.0-dev.1}
    environment:
      AC_DISABLE_INTERACTIVE: "1"
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
      AC_CLOSE_IDLE_CONNECTIONS: "0"
    depends_on:
      ac-database:
        condition: service_healthy


  phpmyadmin:
    <<: *networks
    image: phpmyadmin
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    profiles: []

volumes:
  ac-database:
  ac-client-data:

networks:
  ac-network:
